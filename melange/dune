(rule
 (target kxclib_melange.ml)
 (deps
  kxclib.pp.ml
  src/kxclib_comp_mel.ml
  src/kxclib_melange_extra.ml
  src/kxclib_promise_io.ml)
 (action
  (with-stdout-to %{target}
   (progn
    (cat src/kxclib_comp_mel.ml)
    (echo "\nopen Kxclib_comp\n")
    (echo "\n[@@@warning \"-3-44\"]\n")
    (cat kxclib.pp.ml)
    (echo "\n\n")
    (cat src/kxclib_melange_extra.ml)
    (echo "\n\n")
    (cat src/kxclib_promise_io.ml)
    (echo "\n\n")
    (echo "\nmodule Promise = Promise\n")))))

(library
 (name kxclib_melange)
 (public_name kxclib.melange)
 (modes melange)
 (modules kxclib_melange promise)
 (preprocess
   (pps melange.ppx)))

(rule
 (target kxclib_src.ml)
 (deps ../kxclib.ml)
 (action
  (with-stdout-to %{target}
   (progn
    (echo "[%%define os_type \"re\"]\n")
    (cat %{deps})))))

(rule
 (target kxclib.pp.ml)
 (deps kxclib_src.pp.ml)
 (action
  (with-stderr-to %{target}
    (run %{bin:ocamlc} -stop-after parsing -dsource %{deps}))))

(library
 (name kxclib_src_melange)
 (modules kxclib_src)
 (preprocess (pps ppx_deriving.std ppx_optcomp))
 (modes melange)
 (flags (:standard)))

(melange.emit
 (target _output)
 (modules)
 (promote (until-clean))
 (libraries kxclib_melange))

(rule
 (alias init)
 (targets (dir node_modules))
 (deps package.json yarn.lock)
 (action (run yarn install --frozen-lockfile)))
 
(rule
 (alias runtest)
 (deps
  (sandbox none)
  node_modules
  (alias melange)
  (source_tree tests))
 (action
  (with-accepted-exit-codes 0
   (run yarn test))))

(dirs :standard \ node_modules)
