(rule
 (target kxclib.ml)
 (deps
  kxclib_melange.pp.ml
  src/kxclib_comp_mel.ml)
 (action
  (with-stdout-to %{target}
   (progn
    (cat src/kxclib_comp_mel.ml)
    (echo "\nopen Kxclib_comp\n")
    (echo "\n[@@@warning \"-3-44\"]\n")
    (cat kxclib_melange.pp.ml)))))

(library
 (name kxclib_melange)
 (public_name kxclib.melange)
 (optional)
 (modes melange)
 (modules kxclib)
 (implements kxclib)
 (libraries kxclib_melange__promise)
 (flags :standard -open Kxclib_melange__promise)
 (preprocess
   (pps melange.ppx)))

(library
 (name kxclib_js_melange)
 (public_name kxclib.js-melange)
 (optional)
 (modes melange)
 (modules kxclib_js)
 (libraries kxclib_melange)
 (implements kxclib_js)
 (flags :standard -open Kxclib_melange__promise)
 (preprocess
   (pps melange.ppx)))

(library
 (name kxclib_melange__promise)
 (public_name kxclib.js-melange.promise)
 (optional)
 (modes melange)
 (modules promise)
 (preprocess
  (pps melange.ppx)))

(rule
 (target kxclib_src.ml)
 (deps ../classic/kxclib.ml)
 (action
  (with-stdout-to %{target}
   (progn
    (echo "[%%define os_type \"mel\"]\n")
    (cat %{deps})))))

(rule
 (target kxclib_melange.pp.ml)
 (deps kxclib_src.pp.ml)
 (action
  (with-stderr-to %{target}
    (run %{bin:ocamlc} -pp %{dep:ppx/kxc_melange_ppx.exe} -stop-after parsing -dsource %{deps}))))

(library
 (name kxclib_src_melange)
 (optional)
 (modules kxclib_src)
 (preprocess (pps ppx_deriving.std ppx_optcomp))
 (modes melange)
 (flags (:standard)))

(melange.emit
 (target _output)
 (modules)
 (promote (until-clean))
 (libraries kxclib_melange kxclib_melange_test))

(rule
 (alias init)
 (targets (dir node_modules))
 (deps package.json yarn.lock)
 (action (run yarn install --frozen-lockfile)))
 
(rule
 (alias runtest)
 (deps
  (sandbox none)
  node_modules
  (source_tree src)
  (source_tree tests)
  (:outputs
    _output/node_modules/kxclib.melange/kxclib.js
    _output/melange/tests/kxclib_melange_test.js))
 (action
   (progn
    (run yarn prepare-packages)
    (with-accepted-exit-codes 0 (run yarn test)))))

(dirs :standard \ node_modules)
